name: Bulk Integration Test

on: [workflow_dispatch]

env:
  GRADLE_OPTS: -Dhttp.keepAlive=false

jobs:
  bulk-integration-test-run:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        jdk: [11, 17]
        test-run: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    steps:
    # Configure longpath names if on Windows
    - name: Enable Longpaths if on Windows
      if: ${{ runner.os == 'Windows' }}
      run: git config --system core.longpaths true
      shell: pwsh

    - uses: actions/setup-java@v3
      with:
        distribution: temurin # Temurin is a distribution of adoptium
        java-version: ${{ matrix.jdk }}

    - name: Checkout Security Repo
      uses: actions/checkout@v4

    - name: Insert Admin Credential on Linux
      if: ${{ runner.os == 'Linux' }}
      run: |
        cat <<EOL >> /home/runner/work/security/security/config/internal_users.yml
        admin:
          hash: "$2a$12$VcCDgh2NDk07JGN0rjGbM.Ad41qVR/YFJcgHp0UGns5JDymv..TOG"
          reserved: true
          backend_roles:
            - "admin"
          description: "Demo admin user"
        EOL
      shell: bash

    - name: Add Admin Credential on Windows
      if: ${{ runner.os == 'Windows' }}
      run: |
        $filePath = "D:\a\security\security\config\internal_users.yml"
        Add-Content -Path $filePath -Value "admin:"
        Add-Content -Path $filePath -Value "  hash: `"$2a$12$VcCDgh2NDk07JGN0rjGbM.Ad41qVR/YFJcgHp0UGns5JDymv..TOG`""
        Add-Content -Path $filePath -Value "  reserved: true"
        Add-Content -Path $filePath -Value "  backend_roles:"
        Add-Content -Path $filePath -Value "  - `"admin`""
        Add-Content -Path $filePath -Value "  description: `"Demo admin user`""
      shell: pwsh

    - run: OPENDISTRO_SECURITY_TEST_OPENSSL_OPT=true ./gradlew test

    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: ${{ matrix.jdk }}-${{ matrix.test-run }}-reports
        path: |
          ./build/reports/

    - name: check archive for debugging
      if: always()
      run: echo "Check the artifact ${{ matrix.jdk }}-${{ matrix.test-run }}-reports.zip for detailed test results"
